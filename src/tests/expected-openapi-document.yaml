# DO NOT EDIT. This is a generated file
openapi: 3.0.1
info:
  title: Test API
  version: v1
paths:
  /minimal-endpoint-with-name:
    get:
      tags:
        - OperationId
      operationId: GetMinimalApiWithName
      responses:
        '200':
          description: OK
  /minimal-endpoint-with-no-name:
    get:
      tags:
        - OperationId
      responses:
        '200':
          description: OK
  /explicitOperationIdInName:
    get:
      tags:
        - OperationId
      operationId: GetExplicitOperationIdInName
      responses:
        '200':
          description: OK
  /explicitOperationIdInSwagger:
    get:
      tags:
        - OperationId
      operationId: GetExplicitOperationIdInSwagger
      responses:
        '200':
          description: OK
  /noOperationId:
    get:
      tags:
        - OperationId
      operationId: GetNotOperationId
      responses:
        '200':
          description: OK
  /recordClassRequiredType:
    get:
      tags:
        - RequiredType
      operationId: GetRecordClassRequiredType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredExampleGrandParentRecord'
  /classRequiredType:
    get:
      tags:
        - RequiredType
      operationId: GetClassRequiredType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredExampleGrandParentClass'
  '/minimal-endpoint-with-typed-result-no-produces/{id}':
    get:
      tags:
        - TypedResult
      operationId: GetMinimalApiWithTypedResultWithNoProduces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
  /minimal-endpoint-with-typed-result-with-produces:
    get:
      tags:
        - TypedResult
      operationId: GetMinimalApiWithTypedResultWithProduces
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
  /withEnum:
    get:
      tags:
        - TypedResult
      operationId: TypeResultWithEnum
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
  /withOnlyOnePath:
    get:
      tags:
        - TypedResult
      operationId: TypeResultWithOnlyOnePath
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
  /withAnnotation:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithAnnotation
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /withNoAnnotation:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotation
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
  /withNoAnnotationForAcceptedAndUnprocessableResponseNoType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForAcceptedAndUnprocessableResponseNoType
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '202':
          description: OK
        '422':
          description: Unprocessable Content
  /withNoAnnotationForAcceptedAndUnprocessableResponseWithType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForAcceptedAndUnprocessableResponseWithType
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '202':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '422':
          description: Unprocessable Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
  /withNoAnnotationForCreatedAndConflictNoType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForCreatedAndConflictNoType
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '201':
          description: Created
        '409':
          description: Conflict
  /withNoAnnotationForCreatedAndConflictWithType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForCreatedAndConflictWithType
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: string
  /withNoAnnotationForNoContentAndUnauthorized:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithNoAnnotationForNoContentAndUnauthorized
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Accepted
        '401':
          description: Unauthorized
  /voidOk:
    get:
      tags:
        - TypedResult
      operationId: VoidOk
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /withSwaggerResponseAnnotation:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithSwaggerResponseAnnotation
      responses:
        '200':
          description: Returns TypedResult
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
  /withExceptionsNoType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithExceptionsNoType
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /withExceptionsWithType:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithExceptionsWithType
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  /validateOkNotPresent:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithOutOk
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  /validateOkNotPresentButAnnotationPresent:
    get:
      tags:
        - TypedResult
      operationId: TypedResultWithoutOkButAnnotationPresent
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypedResultExample'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: string
  /useApplicationJsonContentTypeWithOk:
    get:
      tags:
        - TypedResultProperContentType
      operationId: OkNoContentType
      responses:
        '200':
          description: OK
  /useApplicationJsonContentTypeWithOk<T>:
    get:
      tags:
        - TypedResultProperContentType
      operationId: TemplatedOkNoContentType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
  /useApplicationJsonContentTypeWithResultsType:
    get:
      tags:
        - TypedResultProperContentType
      operationId: ResultsNoContentType
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
  /overwriteContenTypeWithProduceAttributeTextPlainForOk:
    get:
      tags:
        - TypedResultProperContentType
      operationId: OkContentTypeTextPlain
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /overwriteContenTypeWithProduceAttributeTextPlainForOk<T>:
    get:
      tags:
        - TypedResultProperContentType
      operationId: TemplatedOkContentTypeTextPlain
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /overwriteContenTypeWithProduceAttributeTextPlainForResultsType:
    get:
      tags:
        - TypedResultProperContentType
      operationId: ResultsContentTypeTextPlain
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    OperationEnum:
      enum:
        - Foo
        - Bar
        - Foobar
      type: string
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    RequiredExampleClass:
      required:
        - exampleProperty
        - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResultClass'
        exampleProperty:
          type: string
      additionalProperties: false
    RequiredExampleGrandParentClass:
      required:
        - requiredExampleParent
      type: object
      properties:
        requiredExampleParent:
          $ref: '#/components/schemas/RequiredExampleParentClass'
        optionalGrandParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleGrandParentRecord:
      required:
        - requiredExampleParent
      type: object
      properties:
        requiredExampleParent:
          $ref: '#/components/schemas/RequiredExampleParentRecord'
        optionalGrandParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleParentClass:
      required:
        - requiredExamples
      type: object
      properties:
        requiredExamples:
          type: array
          items:
            $ref: '#/components/schemas/RequiredExampleClass'
        optionalParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleParentRecord:
      required:
        - requiredExamples
      type: object
      properties:
        requiredExamples:
          type: array
          items:
            $ref: '#/components/schemas/RequiredExampleRecord'
        optionalParentProperty:
          type: string
          nullable: true
      additionalProperties: false
    RequiredExampleRecord:
      required:
        - exampleProperty
        - results
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResultRecord'
        exampleProperty:
          type: string
      additionalProperties: false
    ResultClass:
      required:
        - resultId
      type: object
      properties:
        resultId:
          type: string
        optionalResultProperty:
          type: string
          nullable: true
      additionalProperties: false
    ResultRecord:
      required:
        - resultId
      type: object
      properties:
        resultId:
          type: string
        optionalResultProperty:
          type: string
          nullable: true
      additionalProperties: false
    TypedResultExample:
      required:
        - count
        - name
        - operation
      type: object
      properties:
        name:
          type: string
        count:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        operation:
          $ref: '#/components/schemas/OperationEnum'
      additionalProperties: false